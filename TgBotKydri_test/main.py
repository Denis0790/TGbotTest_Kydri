import asyncio
from aiogram import Bot, Dispatcher, types, executor
from dotenv import load_dotenv
import os

load_dotenv()
bot = Bot(os.getenv('TOKEN'), parse_mode="HTML")
dp = Dispatcher(bot=bot)


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    text_hyper_start1 = '<a href="https://t.me/mama_curls">#–º–∞–º–∞–∫—É–¥—Ä–µ–π</a>'
    text_hyper_start2 = '<a href="https://t.me/mama_curls">–ú–ê–ú–ê –ö–£–î–†–ï–ô</a>'
    text_hyper_start3 = '<a href="https://t.me/kosmo_kudri">–ö–û–°–ú–û–ö–£–î–†–ò</a>'
    textStart = f'üëã–ü—Ä–∏–≤–µ—Ç, –∫–æ–ª–ª–µ–≥–∞!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö—É–¥—Ä—è–≤—ã–π –ë–æ—Ç!\n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –ú—ç—Ä–∏, –∏ —è {text_hyper_start1}\n –ó–¥–µ—Å—å –¥–ª—è —Ç–µ–±—è —è –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –æ\n –∑–∞–≤–∏–≤–∫–µ –≤–æ–ª–æ—Å –∏ —Ä–∞–±–æ—Ç–µ —Å –∫—É–¥—Ä—è–º–∏\n\n‚ñ´Ô∏è –ú–æ–π –∫–∞–Ω–∞–ª:\n{text_hyper_start2}\n\n‚ñ´Ô∏è –û–Ω–ª–∞–π–Ω-—à–∫–æ–ª–∞ –∑–∞–≤–∏–≤–∫–∏:\n{text_hyper_start3}\n\n‚ñ´Ô∏è –°–∞–π—Ç: marykosmos.ru\n\nüëá –ù–∏–∂–µ —Ç–µ–±—è –∂–¥–µ—Ç –≥–∞–π–¥ "5 —à–∞–≥–æ–≤ –∫ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –±–∞–∑–µ   \n–Ω–∞ –∫—É–¥—Ä—è—Ö" üöÄ'
    start_photo = open(f'C:/Users/ilya_/PycharmProjects/pythonProject2/TgBotKydri_test/pictures/Start_photo.jpg', 'rb')
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('üéÅ–ø–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥', callback_data='guide'))
    await message.answer_photo(start_photo, caption=textStart, reply_markup=markup)


@dp.callback_query_handler(lambda call: call.data == "guide")
async def callback_guide_start(call):
    with open(
            'C:/Users/ilya_/PycharmProjects/pythonProject2/TgBotKydri_test/pictures/5_–®–ê–ì–û–í_–ö_–°–¢–ê–ë–ò–õ–¨–ù–û–ô_–ö–õ–ò–ï–ù–¢–°–ö–û–ô_–ë–ê–ó–ï_–ù–ê_–ö–£–î–†–Ø–•.pdf',
            'rb') as file:
        await call.message.answer_document(file)
        await asyncio.sleep(15)
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('üîç–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ', callback_data='under_guide'))
        await call.message.answer(
            'üëç–û—Ç–ª–∏—á–Ω–æ! –í –ì–∞–π–¥–µ –æ–ø–∏—Å–∞–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ —à–∞–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –ª—é–±–æ–º—É –º–∞—Å—Ç–µ—Ä—É –ø–æ –≤–æ–ª–æ—Å–∞–º —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑–æ–π –∏ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –µ–µ.\n\nüéÅ–î–ª—è —Å–≤–æ–∏—Ö –∫–æ–ª–ª–µ–≥ –ø–æ–º–∏–º–æ –≥–∞–π–¥–∞ —è –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ –∫–æ–µ-—á—Ç–æ –µ—â–µ, –∞ –∏–º–µ–Ω–Ω–æ - –æ—Ç–∫—Ä—ã—Ç—ã–π –≤–µ–±–∏–Ω–∞—Ä!\n\nüî•–ù–∞ –Ω–µ–º —è —Ä–∞—Å—Å–∫–∞–∂—É –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –º–æ–µ–π –∫–æ–º–∞–Ω–¥—ã –∏ —É—á–µ–Ω–∏–∫–æ–≤ –∫–∞–∫ –∏–º–µ–Ω–Ω–æ –∑–Ω–∞–Ω–∏—è –æ –∑–∞–≤–∏–≤–∫–µ –≤–æ–ª–æ—Å –∏ –æ —Ç–æ–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫—É–¥—Ä—è–≤—ã–º–∏ –≤–æ–ª–æ—Å–∞–º–∏ –ø—Ä–∏–≤–µ–ª–∏ –≤—Å–µ—Ö –Ω–∞—Å –∫ —Å—Ç–∞–±–∏–ª—å–Ω–æ–º—É –¥–æ—Ö–æ–¥—É –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ–ø–æ–ª–Ω—è—é—â–µ–π—Å—è –±–∞–∑–µ –∑–∞ —Å—á–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.',
            reply_markup=markup)


#
@dp.callback_query_handler(lambda call: call.data == 'under_guide')
async def callback_vebinar(call):
    photo_vebinar = open('C:/Users/ilya_/PycharmProjects/pythonProject2/TgBotKydri_test/pictures/–≤–µ–±27.09.png', 'rb')
    text_vebinar = '–ö–ê–ö –ü–ê–†–ò–ö–ú–ê–•–ï–†–£ –°–û–ë–†–ê–¢–¨ –ë–û–õ–¨–®–£–Æ –ë–ê–ó–£ –ö–õ–ò–ï–ù–¢–û–í –ò –ü–û–í–´–°–ò–¢–¨ –°–í–û–ô –î–û–•–û–î –í –ù–ï–°–ö–û–õ–¨–ö–û –†–ê–ó?\n\n –∫–∞–∫–æ–π —Ç–æ —Ç–µ–∫—Å—Ç\n\n –∏ –µ—â–µ —Ç–µ–∫—Å—Ç –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å)'
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('üî•–Ø –∏–¥—É!', callback_data='go_vebinar'))
    await call.message.answer_photo(photo_vebinar, caption=text_vebinar, reply_markup=markup)


if __name__ == '__main__':
    executor.start_polling(dp)
